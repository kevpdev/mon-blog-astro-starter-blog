name: CI/CD Pipeline

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop]

permissions:
  contents: read

jobs:
  # ===== QUALITY CHECKS =====
  quality:
    name: Code Quality & Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run quality checks
        run: pnpm quality

  # ===== BUILD =====
  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build
        env:
          NODE_ENV: production
          GITHUB_PAGES: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 1

  # ===== DEPLOY TO GITHUB PAGES (STAGING) =====
  deploy-github-pages:
    name: Deploy to GitHub Pages (Staging)
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: ./dist

      - name: Create .nojekyll file for GitHub Pages
        run: touch dist/.nojekyll

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # ===== DEPLOY TO NETLIFY (PRODUCTION) =====
  # deploy-netlify:
  #   name: Deploy to Netlify (Production)
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   steps:
  #   - name: Download build artifacts
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: build-files
  #       path: ./dist
  #
  #   - name: Deploy to Netlify
  #     uses: nwtgck/actions-netlify@v3.0
  #     with:
  #       publish-dir: './dist'
  #       production-branch: main
  #       production-deploy: true
  #       github-token: ${{ secrets.GITHUB_TOKEN }}
  #       deploy-message: 'Deploy from GitHub Actions'
  #     env:
  #       NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  #       NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
