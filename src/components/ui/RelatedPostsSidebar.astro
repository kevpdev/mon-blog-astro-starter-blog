---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import PostCard from './PostCard.astro';

export interface Props {
  posts: CollectionEntry<'blog'>[];
  class?: string;
}

const { posts, class: className = '' } = Astro.props;
---

{posts.length > 0 && (
  <aside class={`related-posts-sidebar ${className}`}>
    <div class="space-y-6">
      <header>
        <h2 class="text-lg font-semibold text-[rgb(var(--text-primary))] mb-1">
          Articles similaires
        </h2>
      </header>

      <div class="space-y-4">
        {posts.map((post) => (
          <article class="group">
            <a 
              href={`/blog/${post.slug}/`}
              class="flex gap-3 hover:opacity-80 transition-opacity duration-200"
            >
              <!-- Aperçu d'image -->
              <div class="flex-shrink-0 w-16 h-16 bg-[rgb(var(--bg-muted))] rounded-lg overflow-hidden">
                {post.data.heroImage ? (
                  <Image
                    src={post.data.heroImage}
                    alt={`Image de l'article: ${post.data.title}`}
                    width={64}
                    height={64}
                    class="w-full h-full object-cover"
                    loading="lazy"
                  />
                ) : (
                  <div class="w-full h-full bg-gradient-to-br from-[rgb(var(--bg-muted))] to-[rgb(var(--border-primary))] flex items-center justify-center">
                    <span class="text-[rgb(var(--text-muted))] text-lg font-medium">
                      {post.data.title.charAt(0).toUpperCase()}
                    </span>
                  </div>
                )}
              </div>

              <!-- Contenu de l'article -->
              <div class="flex-1 min-w-0">
                <h3 class="font-medium text-[rgb(var(--text-primary))] text-sm leading-tight group-hover:text-[rgb(var(--text-secondary))] transition-colors line-clamp-2 mb-1">
                  {post.data.title}
                </h3>
                
                <time 
                  class="text-xs text-[rgb(var(--text-muted))] block mb-2"
                  datetime={post.data.pubDate.toISOString()}
                >
                  {post.data.pubDate.toLocaleDateString('fr-FR', {
                    day: 'numeric',
                    month: 'short',
                    year: 'numeric'
                  })}
                </time>

                {post.data.description && (
                  <p class="text-xs text-[rgb(var(--text-muted))] line-clamp-2 leading-relaxed">
                    {post.data.description}
                  </p>
                )}
              </div>
            </a>
          </article>
        ))}
      </div>

      <!-- Lien vers tous les articles -->
      <div class="pt-4 border-t border-[rgb(var(--border-secondary))]">
        <a 
          href="/blog"
          class="text-sm text-[rgb(var(--text-secondary))] hover:text-[rgb(var(--text-primary))] transition-colors"
        >
          Voir tous les articles →
        </a>
      </div>
    </div>

    <!-- Version compacte pour mobile -->
    <div class="mobile-related-posts md:hidden mt-8 pt-8 border-t border-[rgb(var(--border-primary))]">
      <h2 class="text-lg font-semibold text-[rgb(var(--text-primary))] mb-4">
        Articles similaires
      </h2>
      
      <div class="grid grid-cols-1 gap-4">
        {posts.map((post) => (
          <PostCard post={post} />
        ))}
      </div>
    </div>
  </aside>
)}

<style>
  .related-posts-sidebar {
    /* Cache la version sidebar sur mobile, affiche la version compacte */
  }
  
  @media (min-width: 768px) {
    .related-posts-sidebar .mobile-related-posts {
      display: none;
    }
  }
  
  @media (max-width: 767px) {
    .related-posts-sidebar > div:first-child {
      display: none;
    }
  }
  
  /* Style pour le line-clamp */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>