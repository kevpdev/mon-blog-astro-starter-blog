---
export interface Props {
  class?: string;
}

const { class: className = '' } = Astro.props;
---

<button 
  id="theme-toggle" 
  class={`text-[rgb(var(--text-primary))] hover:bg-[rgb(var(--bg-muted))] hover:text-[rgb(var(--brand-primary))] focus:ring-[rgb(var(--brand-primary))] inline-flex items-center justify-center font-medium rounded-md transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed px-3 py-1.5 text-sm p-2 border border-[rgb(var(--border-primary))] ${className}`}
  aria-label="Basculer le thème"
  title="Basculer entre thème clair et sombre"
  type="button"
>
  <!-- Sun icon for light mode -->
  <svg 
    class="sun-icon w-5 h-5 transition-transform duration-200 rotate-0 scale-100" 
    viewBox="0 0 24 24" 
    fill="none" 
    stroke="currentColor" 
    stroke-width="2" 
    stroke-linecap="round" 
    stroke-linejoin="round"
    aria-hidden="true"
  >
    <circle cx="12" cy="12" r="5"/>
    <path d="M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4"/>
  </svg>
  
  <!-- Moon icon for dark mode -->
  <svg 
    class="moon-icon w-5 h-5 transition-transform duration-200 absolute rotate-90 scale-0" 
    viewBox="0 0 24 24" 
    fill="none" 
    stroke="currentColor" 
    stroke-width="2" 
    stroke-linecap="round" 
    stroke-linejoin="round"
    aria-hidden="true"
  >
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
  </svg>
</button>

<script>
  // Theme utilities
  function getCurrentTheme() {
    if (typeof window === 'undefined') return 'system';
    return localStorage.getItem('theme') || 'system';
  }

  function getSystemTheme() {
    if (typeof window === 'undefined') return 'light';
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  }

  function setTheme(theme: string) {
    if (typeof window === 'undefined') return;
    
    localStorage.setItem('theme', theme);
    applyTheme(theme);
  }

  function applyTheme(theme: string) {
    if (typeof document === 'undefined') return;
    
    const root = document.documentElement;
    
    // Remove existing theme class
    root.classList.remove('dark');
    
    // Apply new theme (only add dark class for dark mode)
    if (theme === 'system') {
      const systemTheme = getSystemTheme();
      if (systemTheme === 'dark') {
        root.classList.add('dark');
      }
    } else if (theme === 'dark') {
      root.classList.add('dark');
    }
  }

  function updateThemeToggle() {
    const toggle = document.getElementById('theme-toggle');
    const sunIcon = toggle?.querySelector('.sun-icon');
    const moonIcon = toggle?.querySelector('.moon-icon');
    
    if (!toggle || !sunIcon || !moonIcon) return;
    
    const currentTheme = getCurrentTheme();
    const isDark = currentTheme === 'dark' || (currentTheme === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches);
    
    if (isDark) {
      // Show sun icon in dark mode
      sunIcon.classList.remove('rotate-90', 'scale-0');
      sunIcon.classList.add('rotate-0', 'scale-100');
      moonIcon.classList.remove('rotate-0', 'scale-100');  
      moonIcon.classList.add('rotate-90', 'scale-0');
      toggle.setAttribute('aria-label', 'Activer le thème clair');
      toggle.setAttribute('title', 'Passer au thème clair');
    } else {
      // Show moon icon in light mode
      moonIcon.classList.remove('rotate-90', 'scale-0');
      moonIcon.classList.add('rotate-0', 'scale-100');
      sunIcon.classList.remove('rotate-0', 'scale-100');
      sunIcon.classList.add('rotate-90', 'scale-0');
      toggle.setAttribute('aria-label', 'Activer le thème sombre');
      toggle.setAttribute('title', 'Passer au thème sombre');
    }
  }

  function toggleTheme() {
    const currentTheme = getCurrentTheme();
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    setTheme(newTheme);
    updateThemeToggle();
  }

  // Initialize theme toggle
  document.addEventListener('DOMContentLoaded', () => {
    const toggle = document.getElementById('theme-toggle');
    if (toggle) {
      updateThemeToggle();
      toggle.addEventListener('click', toggleTheme);
    }
    
    // Listen for system theme changes
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
      if (getCurrentTheme() === 'system') {
        applyTheme('system');
        updateThemeToggle();
      }
    });
  });
</script>