---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import BaseLayout from './BaseLayout.astro';
import Container from '../components/ui/Container.astro';
import Section from '../components/ui/Section.astro';
import Hero from '../components/ui/Hero.astro';
import FormattedDate from '../components/ui/FormattedDate.astro';

export interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;

// Récupérer uniquement les articles avec le tag "avis-formation"
const allBlogPosts = await getCollection('blog');
const formationPosts = allBlogPosts
  .filter((post) => {
    const hasTags = post.data.tags && Array.isArray(post.data.tags);
    return hasTags && post.data.tags.includes('avis-formation');
  })
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<BaseLayout title={title} description={description}>
  <Hero
    title="Meilleures Formations SEO & Business"
    subtitle="Découvrez nos avis détaillés et objectifs sur les formations les plus populaires en SEO, marketing digital et développement business."
  />
  
  <Section>
    <Container size="xl">
      {formationPosts.length > 0 ? (
        <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
          {formationPosts.map((post) => (
            <article class="bg-[rgb(var(--bg-primary))] rounded-xl border border-[rgb(var(--border-primary))] p-6 shadow-sm hover:shadow-lg transition-shadow">
              {post.data.heroImage && (
                <div class="mb-4 overflow-hidden rounded-lg">
                  <Image
                    src={post.data.heroImage}
                    alt={post.data.title}
                    width={400}
                    height={200}
                    class="w-full h-48 object-cover"
                  />
                </div>
              )}
              <div>
                <h2 class="text-xl font-bold text-[rgb(var(--text-primary))] mb-3">
                  <a 
                    href={`/blog/${post.slug}/`}
                    class="hover:text-[rgb(var(--brand-primary))] transition-colors"
                  >
                    {post.data.title}
                  </a>
                </h2>
                <p class="text-[rgb(var(--text-secondary))] mb-4 line-clamp-3">{post.data.description}</p>
                <div class="flex flex-wrap justify-between items-center gap-2">
                  <div class="flex flex-wrap gap-2">
                    {post.data.tags.map((tag) => (
                      <span class="px-2 py-1 bg-[rgb(var(--bg-muted))] text-[rgb(var(--text-muted))] text-xs rounded-md">
                        #{tag}
                      </span>
                    ))}
                  </div>
                  <FormattedDate date={post.data.pubDate} class="text-sm text-[rgb(var(--text-muted))]" />
                </div>
              </div>
            </article>
          ))}
        </div>
      ) : (
        <div class="text-center py-12">
          <h2 class="text-2xl font-semibold mb-4 text-[rgb(var(--text-primary))]">Aucune formation disponible pour le moment</h2>
          <p class="text-[rgb(var(--text-secondary))]">De nouveaux avis de formations seront bientôt disponibles.</p>
        </div>
      )}
    </Container>
  </Section>
</BaseLayout>